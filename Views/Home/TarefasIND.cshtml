@{
    ViewData["Title"] = "Tarefas Individuais";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="/css/Tarefas.css" rel="stylesheet" />

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1 class="dashboard-title">
            <i class="fas fa-tasks"></i> Tarefas Individuais
        </h1>
    </div>

    <div class="task-list" id="taskList"></div>

    <div class="task-actions mt-4">
        <button class="btn btn-success" onclick="openCreateModal()">Nova Tarefa</button>
    </div>
</div>

<!-- Modal Criar -->
<div id="createModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3>Nova Tarefa Individual</h3>
        <div class="form-group">
            <label>Nome da Tarefa:</label>
            <input type="text" id="taskName" class="form-input" autocomplete="off">
        </div>
        <div class="form-group">
            <label>Data e Hora de Início:</label>
            <input type="datetime-local" id="taskStart" class="form-input">
        </div>
        <div class="form-actions">
            <button class="btn-primary" onclick="createTask()">Criar</button>
            <button class="btn-secondary" onclick="closeCreateModal()">Cancelar</button>
        </div>
    </div>
</div>

<!-- Modal Editar -->
<div id="editModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3>Editar Tarefa</h3>
        <div class="form-group">
            <label>Nome da Tarefa:</label>
            <input type="text" id="editTaskName" class="form-input" autocomplete="off">
        </div>
        <div class="form-group">
            <label>Data e Hora de Fim:</label>
            <input type="datetime-local" id="editTaskEnd" class="form-input">
        </div>
        <div class="form-actions">
            <button class="btn-primary" onclick="saveEditedTask()">Guardar</button>
            <button class="btn-secondary" onclick="closeEditModal()">Cancelar</button>
        </div>
    </div>
</div>

<script>
    const apiUrl = '/api/TarefaIND';
    let editingTaskId = null;
    let sharingTaskId = null;

    window.onload = async function() {
        await loadTasks();
    };

    // Carrega tarefas, podendo filtrar por projeto
    async function loadTasks(idProjeto = 0) {
        try {
            let url = apiUrl;
            if (idProjeto !== 0) {
                url += `?idProjeto=${idProjeto}`;
            }

            const res = await fetch(url);
            const data = await res.json();

            let html = '';
            if (data.length === 0) {
                html = '<p class="text-muted">Nenhuma tarefa encontrada.</p>';
            } else {
                data.forEach(tarefa => {
                    html += `
                    <div class="task-item shadow-sm p-2 mb-2 rounded d-flex justify-content-between align-items-center">
                        <div>
                            <input type="checkbox">
                            <span>${tarefa.nomeTarefa}</span><br>
                            <small>Início: ${tarefa.dtInicio ?? '-'} ${tarefa.hrInicio}</small>
                        </div>
                        <div>
                            <button class="btn btn-light btn-sm border me-2" onclick="openEditModal(${tarefa.idTarefa}, '${tarefa.nomeTarefa}')">
                                <i class="fas fa-pencil-alt"></i>
                            </button>
                            <button class="btn btn-light btn-sm border me-2" onclick="openShareModal(${tarefa.idTarefa})">
                                <i class="fas fa-share"></i>
                            </button>
                            <button class="btn btn-light btn-sm border" onclick="deleteTask(${tarefa.idTarefa})">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
                });
            }
            document.getElementById('taskList').innerHTML = html;
        } catch (e) {
            console.error("Erro ao carregar tarefas", e);
        }
    }

    // Modais Criar
    function openCreateModal() {
        document.getElementById('taskName').value = '';
        document.getElementById('taskStart').value = '';
        document.getElementById('createModal').style.display = 'flex';
    }

    function closeCreateModal() {
        document.getElementById('createModal').style.display = 'none';
    }

    // Criar tarefa
    async function createTask() {
        const nome = document.getElementById('taskName').value.trim();
        const dataHora = document.getElementById('taskStart').value;

        if (!nome) {
            alert('Insere o nome da tarefa.');
            return;
        }

        const agora = new Date().toISOString();
        const [dt, hr] = (dataHora || agora).split("T");

        const tarefaDTO = {
            nomeTarefa: nome,
            dtInicio: dt,
            hrInicio: hr.split('.')[0],
            dtFim: null,
            hrFim: '00:00:00',
            idProjeto: 0
        };

        try {
            const res = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(tarefaDTO)
            });

            if (!res.ok) throw new Error("Erro ao criar tarefa");

            closeCreateModal();
            await loadTasks();
        } catch (e) {
            console.error(e);
            alert('Erro ao criar tarefa.');
        }
    }

    // Modais Editar
    function openEditModal(id, nome) {
        editingTaskId = id;
        document.getElementById('editTaskName').value = nome;
        document.getElementById('editTaskEnd').value = '';
        document.getElementById('editModal').style.display = 'flex';
    }

    function closeEditModal() {
        document.getElementById('editModal').style.display = 'none';
        editingTaskId = null;
    }

    // Editar tarefa
    async function saveEditedTask() {
        const nome = document.getElementById('editTaskName').value.trim();
        const dataHora = document.getElementById('editTaskEnd').value;

        if (!nome || !editingTaskId) {
            document.getElementById('editTaskName').focus();
            return;
        }

        const id = editingTaskId;
        const [dtFim, hrFim] = dataHora ? dataHora.split("T") : [null, "00:00:00"];

        const tarefa = {
            nomeTarefa: nome,
            dtInicio: null,
            hrInicio: "00:00:00",
            dtFim: dtFim,
            hrFim: hrFim ? hrFim : "00:00:00",
            idProjeto: 0
        };

        try {
            const res = await fetch(`/api/TarefaIND/AtualizarTarefa/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(tarefa)
            });

            if (!res.ok) throw new Error("Erro ao editar tarefa");

            closeEditModal();
            await loadTasks();
        } catch (e) {
            console.error("Erro ao editar tarefa:", e);
            alert("Erro ao editar tarefa.");
        }
    }

    // --- PARTILHAR TAREFA ---

    // Modal Partilhar
    function openShareModal(id) {
        sharingTaskId = id;
        document.getElementById('shareProjectId').value = '';
        document.getElementById('shareModal').style.display = 'flex';
    }

    function closeShareModal() {
        sharingTaskId = null;
        document.getElementById('shareModal').style.display = 'none';
    }

    // Confirmar partilha
    async function confirmarPartilha() {
        const novoProjetoId = document.getElementById('shareProjectId').value.trim();

        if (!novoProjetoId) {
            alert("Por favor insira o ID do projeto destino.");
            return;
        }

        try {
            const res = await fetch(`/api/TarefaIND/CopiarTarefa/${sharingTaskId}?novoProjetoId=${novoProjetoId}`, {
                method: 'POST',
            });

            if (!res.ok) throw new Error("Erro ao copiar tarefa");

            alert("Tarefa copiada com sucesso!");
            closeShareModal();
            await loadTasks(novoProjetoId); // carrega as tarefas do novo projeto
        } catch (e) {
            console.error("Erro ao copiar tarefa:", e);
            alert("Erro ao copiar tarefa.");
        }
    }

    // Deletar tarefa
    async function deleteTask(id) {
        if (!confirm('Tens certeza que queres apagar esta tarefa?')) return;

        try {
            const res = await fetch(`${apiUrl}/${id}`, { method: 'DELETE' });

            if (!res.ok) throw new Error('Erro ao apagar tarefa');

            await loadTasks();
        } catch (e) {
            console.error(e);
            alert('Erro ao apagar tarefa.');
        }
    }
</script>
