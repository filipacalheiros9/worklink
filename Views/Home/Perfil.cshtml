@model WebApplication2.Entities.Utilizador
@{
    ViewData["Title"] = "O Meu Perfil";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="~/css/perfil.css" rel="stylesheet" />


<div class="container mt-5 mb-5">
    <div class="perfil-card">
        <h2 class="text-success text-center mb-4">
            <i class="fas fa-user-circle me-2"></i> O Meu Perfil
        </h2>

        <div id="errorBox" class="alert-box"></div>

        <form id="perfilForm">
            <input type="hidden" id="IdUtilizador" value="@Model.IdUtilizador" />

            <!-- Nome -->
            <div class="mb-4">
                <label class="form-label">Nome</label>
                <div class="input-group">
                    <span class="input-group-text bg-white"><i class="fas fa-user text-success"></i></span>
                    <input class="form-control" id="Nome" value="@Model.Nome" readonly />
                    <button type="button" class="btn btn-light border" onclick="enableEdit('Nome')">
                        <i class="fas fa-pencil-alt text-muted"></i>
                    </button>
                </div>
            </div>

            <!-- Username -->
            <div class="mb-4">
                <label class="form-label">Username</label>
                <div class="input-group">
                    <span class="input-group-text bg-white"><i class="fas fa-at text-success"></i></span>
                    <input class="form-control" id="Username" value="@Model.Username" readonly />
                    <button type="button" class="btn btn-light border" onclick="enableEdit('Username')">
                        <i class="fas fa-pencil-alt text-muted"></i>
                    </button>
                </div>
            </div>

            <!-- Password -->
            <div class="mb-4">
                <label class="form-label">Password</label>
                <div class="input-group">
                    <span class="input-group-text bg-white"><i class="fas fa-lock text-success"></i></span>
                    <input type="password" class="form-control" id="Password" value="@Model.Password" readonly />
                    <button type="button" class="btn btn-light border" onclick="enableEdit('Password')">
                        <i class="fas fa-pencil-alt text-muted"></i>
                    </button>
                </div>
            </div>

            <!-- Botão -->
            <div class="text-center mt-4">
                <button type="submit" class="btn btn-success">Guardar Alterações</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function enableEdit(id) {
            const input = document.getElementById(id);
            input.removeAttribute('readonly');
            input.focus();
        }

        function showError(msg) {
            const errorBox = document.getElementById("errorBox");
            errorBox.textContent = msg;
            errorBox.style.display = "block";
        }

        document.getElementById("perfilForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            document.getElementById("errorBox").style.display = "none";

            const id = parseFloat(document.getElementById("IdUtilizador").value);
            const nome = document.getElementById("Nome").value;
            const username = document.getElementById("Username").value;
            const password = document.getElementById("Password").value;

            const data = {
                IdUtilizador: id,
                Nome: nome,
                Username: username,
                Password: password
            };

            console.log("🟡 Dados enviados para a API:", data); // DEBUG

            try {
                const response = await fetch(`/api/PerfilApi`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const result = await response.json();
                    alert(result.Message || "Alterações guardadas com sucesso!");
                    location.reload();
                } else {
                    let msg = "Erro desconhecido.";
                    try {
                        const contentType = response.headers.get("content-type");
                        if (contentType && contentType.includes("application/json")) {
                            const errorData = await response.json();
                            msg = errorData.Message || msg;
                        } else {
                            msg = `Erro HTTP ${response.status}`;
                        }
                    } catch {
                        msg = "Erro inesperado: resposta inválida da API.";
                    }
                    showError(msg);
                }
            } catch (error) {
                showError("Erro inesperado no envio: " + error.message);
            }
        });
    </script>
}
