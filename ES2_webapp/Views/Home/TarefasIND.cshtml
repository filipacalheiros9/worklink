@{
    ViewData["Title"] = "Tarefas Individuais";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="/css/Tarefas.css" rel="stylesheet" />

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1 class="dashboard-title">
            <i class="fas fa-tasks"></i> Tarefas Individuais
        </h1>
    </div>

    <div class="task-list" id="taskList"></div>

    <div class="task-actions mt-4">
        <button class="btn btn-success" onclick="openCreateModal()">Nova Tarefa</button>
    </div>
</div>

<!-- Modal Criar -->
<div id="createModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3>Nova Tarefa Individual</h3>
        <div class="form-group">
            <label>Nome da Tarefa:</label>
            <input type="text" id="taskName" class="form-input" autocomplete="off">
        </div>
        <div class="form-group">
            <label>Data e Hora de Início:</label>
            <input type="datetime-local" id="taskStart" class="form-input">
        </div>
        <div class="form-group">
            <label>Preço por Hora (€):</label>
            <input type="number" step="0.01" id="taskMoney" class="form-input">
        </div>
        <div class="form-actions">
            <button class="btn-primary" onclick="createTask()">Criar</button>
            <button class="btn-secondary" onclick="closeCreateModal()">Cancelar</button>
        </div>
    </div>
</div>

<!-- Modal Editar -->
<div id="editModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3>Editar Tarefa</h3>
        <div class="form-group">
            <label>Nome da Tarefa:</label>
            <input type="text" id="editTaskName" class="form-input" autocomplete="off">
        </div>
        <div class="form-group">
            <label>Data e Hora de Fim:</label>
            <input type="datetime-local" id="editTaskEnd" class="form-input">
        </div>
        <div class="form-group">
            <label>Preço por Hora (€):</label>
            <input type="number" step="0.01" id="editTaskMoney" class="form-input">
        </div>
        <div class="form-actions">
            <button class="btn-primary" onclick="saveEditedTask()">Guardar</button>
            <button class="btn-secondary" onclick="closeEditModal()">Cancelar</button>
        </div>
    </div>
</div>

<!-- Modal Partilhar -->
<div id="shareModal" class="modal-overlay" style="display:none;">
    <div class="modal-content">
        <h3>Exportar para Projeto</h3>
        <div class="form-group">
            <label>Pesquisar Projeto:</label>
            <input type="text" id="shareProjectId" class="form-input" placeholder="ID ou Nome do Projeto">
        </div>
        <div class="form-actions">
            <button class="btn-primary" onclick="confirmarPartilha()">Partilhar</button>
            <button class="btn-secondary" onclick="closeShareModal()">Cancelar</button>
        </div>
    </div>
</div>

<script>
    const apiUrl = '/api/TarefaIND';
    let editingTaskId = null;
    let sharingTaskId = null;

    window.onload = async function () {
        await loadTasks();
    };

    async function loadTasks() {
        try {
            const res = await fetch(apiUrl);
            const data = await res.json();

            let html = '';
            if (data.length === 0) {
                html = '<p class="text-muted">Nenhuma tarefa encontrada.</p>';
            } else {
                data.forEach(tarefa => {
                    html += `
                <div class="task-item shadow-sm p-2 mb-2 rounded d-flex justify-content-between align-items-center">
                    <div>
                        <input type="checkbox">
                        <span>${tarefa.nomeTarefa}</span><br>
                        <small>Início: ${tarefa.dtInicio ?? '-'} ${tarefa.hrInicio}</small><br>
                        <small>€${(tarefa.precoHora ?? 0).toFixed(2)}/h</small>
                    </div>
                    <div>
                        <button class="btn btn-light btn-sm border me-2" onclick="openEditModal(${tarefa.idTarefa}, '${tarefa.nomeTarefa}', ${tarefa.precoHora ?? 0})">
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                        <button class="btn btn-light btn-sm border me-2" onclick="openShareModal(${tarefa.idTarefa})">
                            <i class="fas fa-share"></i>
                        </button>
                        <button class="btn btn-light btn-sm border" onclick="deleteTask(${tarefa.idTarefa})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `;
                });
            }
            document.getElementById('taskList').innerHTML = html;
        } catch (e) {
            console.error("Erro ao carregar tarefas", e);
        }
    }

    function openCreateModal() {
        document.getElementById('taskName').value = '';
        document.getElementById('taskStart').value = '';
        document.getElementById('taskMoney').value = '';
        document.getElementById('createModal').style.display = 'flex';
    }

    function closeCreateModal() {
        document.getElementById('createModal').style.display = 'none';
    }

    async function createTask() {
        const nome = document.getElementById('taskName').value.trim();
        const dataHora = document.getElementById('taskStart').value;
        const preco = parseFloat(document.getElementById('taskMoney').value.replace(',', '.')) || 0;

        if (!nome) {
            alert('Insere o nome da tarefa.');
            return;
        }

        const agora = new Date().toISOString();
        const [dt, hr] = (dataHora || agora).split("T");

        const tarefaDTO = {
            nomeTarefa: nome,
            dtInicio: dt,
            hrInicio: hr.split('.')[0],
            precoHora: preco
        };

        try {
            const res = await fetch(apiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(tarefaDTO)
            });

            if (!res.ok) throw new Error("Erro ao criar tarefa");

            closeCreateModal();
            await loadTasks();
        } catch (e) {
            console.error(e);
            alert('Erro ao criar tarefa.');
        }
    }

    function openEditModal(id, nome, preco) {
        editingTaskId = id;
        document.getElementById('editTaskName').value = nome;
        document.getElementById('editTaskMoney').value = preco;
        document.getElementById('editTaskEnd').value = '';
        document.getElementById('editModal').style.display = 'flex';
    }

    function closeEditModal() {
        editingTaskId = null;
        document.getElementById('editModal').style.display = 'none';
    }

    async function saveEditedTask() {
        const nome = document.getElementById('editTaskName').value.trim();
        const dataHora = document.getElementById('editTaskEnd').value;
        const preco = parseFloat(document.getElementById('editTaskMoney').value.replace(',', '.')) || 0;

        const [dtFim, hrFim] = dataHora ? dataHora.split("T") : [null, "00:00:00"];

        const tarefa = {
            nomeTarefa: nome,
            dtFim: dtFim,
            hrFim: hrFim,
            precoHora: preco
        };

        try {
            const res = await fetch(`${apiUrl}/AtualizarTarefa/${editingTaskId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(tarefa)
            });

            if (!res.ok) throw new Error("Erro ao editar tarefa");

            closeEditModal();
            await loadTasks();
        } catch (e) {
            console.error("Erro ao editar tarefa:", e);
            alert("Erro ao editar tarefa.");
        }
    }

    function openShareModal(id) {
        sharingTaskId = id;
        document.getElementById('shareProjectId').value = '';
        document.getElementById('shareModal').style.display = 'flex';
    }

    function closeShareModal() {
        sharingTaskId = null;
        document.getElementById('shareModal').style.display = 'none';
    }

    async function confirmarPartilha() {
        const novoProjetoId = document.getElementById('shareProjectId').value.trim();

        if (!novoProjetoId) {
            alert("Por favor insira o ID do projeto destino.");
            return;
        }

        try {
            const res = await fetch(`/api/TarefaIND/CopiarTarefa/${sharingTaskId}?idProjeto=${novoProjetoId}`, {
                method: 'POST',
            });

            if (!res.ok) throw new Error("Erro ao copiar tarefa");

            alert("Tarefa copiada com sucesso!");
            closeShareModal();
            await loadTasks();
        } catch (e) {
            console.error("Erro ao copiar tarefa:", e);
            alert("Erro ao copiar tarefa.");
        }
    }

    async function deleteTask(id) {
        if (!confirm('Tens certeza que queres apagar esta tarefa?')) return;

        try {
            const res = await fetch(`${apiUrl}/${id}`, { method: 'DELETE' });

            if (!res.ok) throw new Error('Erro ao apagar tarefa');

            await loadTasks();
        } catch (e) {
            console.error(e);
            alert('Erro ao apagar tarefa.');
        }
    }
</script>
