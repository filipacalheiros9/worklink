@{
    ViewBag.Title = "Minhas Equipas";
}

<!-- Dependências -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="~/css/minhasequipas.css" rel="stylesheet" />

<div class="container-fluid my-5">
  <!-- Cabeçalho -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="text-success">
      <i class="fas fa-users me-2"></i>Minhas Equipas
    </h2>
    <button
      id="btnAbrirModal"
      class="btn btn-success rounded-pill px-4 py-2 shadow-sm"
      onclick="abrirModalCriarEquipa()">
      <i class="fas fa-plus me-1"></i> Criar Equipa
    </button>
  </div>

  <!-- Lista de Equipas (inject via JS) -->
  <div id="listaEquipas" class="d-flex flex-wrap justify-content-center gap-4"></div>
</div>

<!-- Modal Criar Equipa -->
<div id="modalCriarEquipa" class="modal">
  <div class="modal-content popup-card">
    <h4 class="popup-title">Criar Nova Equipa</h4>
    <div class="popup-body">
      <label for="nomeEquipa" class="form-label small">Nome da Equipa</label>
      <input type="text" id="nomeEquipa" class="form-control mb-3" placeholder="Ex: Marketing" />

      <button class="btn btn-success w-100 mb-2" onclick="criarEquipa()">
        <i class="fas fa-save me-1"></i> Salvar
      </button>
      <button class="btn btn-outline-secondary w-100" onclick="fecharModalCriarEquipa()">
        Cancelar
      </button>
    </div>
  </div>
</div>

<!-- Modal Convidar Utilizador -->
<div id="modalConvite" class="modal">
  <div class="modal-content popup-card">
    <h4 class="popup-title">Convidar Utilizador</h4>
    <div class="popup-body">
      <input type="text" id="inputUsername" class="form-control mb-2"
             placeholder="Pesquisar utilizador…" autocomplete="off" />
      <div id="autocompleteResultados"></div>
      <textarea id="mensagemConvite" class="form-control mb-3"
                placeholder="Mensagem (opcional)"></textarea>

      <button class="btn btn-success w-100 mb-2" onclick="enviarConvite()">
        <i class="fas fa-paper-plane me-1"></i> Enviar
      </button>
      <button class="btn btn-outline-secondary w-100" onclick="fecharModalConvite()">
        Cancelar
      </button>
    </div>
  </div>
</div>

<!-- Modal Membros -->
<div id="modalMembros" class="modal">
  <div class="modal-content popup-card">
    <h4 class="popup-title">Membros da Equipa</h4>
    <ul id="listaMembros" class="list-group mb-3"></ul>
    <button class="btn btn-outline-secondary w-100" onclick="fecharModalMembros()">
      Fechar
    </button>
  </div>
</div>

<input type="hidden" id="user-id" value="@User.Claims.FirstOrDefault(c => c.Type == "id")?.Value" />

@section Scripts {
    <script>
        let equipaSelecionadaId = null,
            usernameSelecionado = null;

        window.onload = carregarEquipas;

        async function carregarEquipas() {
            const container = document.getElementById("listaEquipas");
            container.innerHTML = "<p>Carregando equipas…</p>";

            try {
                const res = await fetch("/api/Equipa/Minhas");
                const equipas = await res.json();
                if (!res.ok) throw new Error(equipas.message);

                container.innerHTML = equipas.length === 0
                    ? "<p>Não fazes parte de nenhuma equipa.</p>"
                    : equipas.map(e => `
            <div class="perfil-card">
              <div class="card-header">
                <i class="fas fa-users"></i>
                <span class="card-title">${e.nome}</span>
                <span class="role-badge ${e.isCriador ? 'owner' : 'guest'}">
                  ${e.isCriador ? 'Proprietário' : 'Convidado'}
                </span>
              </div>
              <!-- corpo vazio para espaçamento -->
              <div class="card-body"></div>
              <div class="card-actions">
                ${e.isCriador ? `
                  <button class="btn-icon" onclick="abrirModalConvite(${e.idEquipa})" title="Convidar">
                    <i class="fas fa-user-plus"></i>
                  </button>` : ''}
                <button class="btn-icon"
                        onclick="location.href='/Home/ProjetosEquipa?idEquipa=${e.idEquipa}'"
                        title="Projetos">
                  <i class="fas fa-tasks"></i>
                </button>
                <button class="btn-icon" onclick="abrirModalMembros(${e.idEquipa})" title="Membros">
                  <i class="fas fa-users"></i>
                </button>
                ${e.isCriador ? `
                  <button class="btn-icon btn-danger" onclick="apagarEquipa(${e.idEquipa})" title="Apagar">
                    <i class="fas fa-trash-alt"></i>
                  </button>` : ''}
              </div>
            </div>
          `).join("");
            } catch (err) {
                console.error(err);
                container.innerHTML = "<p>Erro ao carregar equipas.</p>";
            }
        }

        function abrirModalCriarEquipa() { document.getElementById("modalCriarEquipa").style.display = "flex"; }
        function fecharModalCriarEquipa() { document.getElementById("modalCriarEquipa").style.display = "none"; }

        async function criarEquipa() {
            const nome = document.getElementById("nomeEquipa").value.trim();
            if (!nome) return alert("Nome obrigatório");
            const res = await fetch("/api/Equipa/Criar", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ nome })
            });
            if (res.ok) { fecharModalCriarEquipa(); carregarEquipas(); }
            else { const e = await res.json(); alert(e.message || "Erro"); }
        }

        function abrirModalConvite(id) {
            equipaSelecionadaId = id;
            usernameSelecionado = null;
            document.getElementById("inputUsername").value = "";
            document.getElementById("autocompleteResultados").innerHTML = "";
            document.getElementById("mensagemConvite").value = "";
            document.getElementById("modalConvite").style.display = "flex";
        }
        function fecharModalConvite() { document.getElementById("modalConvite").style.display = "none"; }

        document.getElementById('inputUsername').addEventListener('input', async function() {
            const q = this.value.trim();
            if (q.length < 2) {
                document.getElementById("autocompleteResultados").innerHTML = "";
                return;
            }
            const res = await fetch(`/api/Equipa/PesquisarUtilizador?query=${encodeURIComponent(q)}`);
            const data = await res.json();
            document.getElementById("autocompleteResultados").innerHTML =
                data.map(u => `<div onclick="selecionarUsername('${u.username}')">${u.username}</div>`).join("");
        });
        function selecionarUsername(u) {
            usernameSelecionado = u;
            document.getElementById("inputUsername").value = u;
            document.getElementById("autocompleteResultados").innerHTML = "";
        }

        async function enviarConvite() {
            if (!usernameSelecionado || !equipaSelecionadaId) return alert("Seleciona um utilizador");
            const msg = document.getElementById("mensagemConvite").value.trim();
            const res = await fetch("/api/Equipa/Convidar", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    usernameDestinatario: usernameSelecionado,
                    mensagem: msg,
                    idEquipa: equipaSelecionadaId
                })
            });
            if (res.ok) fecharModalConvite();
            else { const e = await res.json(); alert(e.message || "Erro"); }
        }

        function abrirModalMembros(id) {
            fetch(`/api/Equipa/GetMembros?id=${id}`)
                .then(r => r.json())
                .then(membros => {
                    fetch("/api/Equipa/Minhas")
                        .then(r => r.json())
                        .then(eqs => {
                            const eq = eqs.find(x => x.idEquipa === id),
                                dono = eq?.isCriador,
                                meuId = +document.getElementById("user-id").value;
                            const ul = document.getElementById("listaMembros");
                            ul.innerHTML = membros.map(m => {
                                if (dono && m.id !== meuId) {
                                    return `<li class="list-group-item d-flex justify-content-between align-items-center">
                          ${m.nome}
                          <button class="btn btn-sm btn-danger" onclick="removerMembro(${m.id},${id})">Remover</button>
                        </li>`;
                                }
                                if (!dono && m.id === meuId) {
                                    return `<li class="list-group-item d-flex justify-content-between align-items-center">
                          ${m.nome}
                          <button class="btn btn-sm btn-secondary" onclick="removerMembro(${m.id},${id})">Sair</button>
                        </li>`;
                                }
                                return `<li class="list-group-item">${m.nome}</li>`;
                            }).join("");
                            document.getElementById("modalMembros").style.display = "flex";
                        });
                });
        }
        function fecharModalMembros() { document.getElementById("modalMembros").style.display = "none"; }

        function removerMembro(userId, equipId) {
            if (!confirm("Remover membro?")) return;
            fetch("/api/Equipa/RemoverMembro", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userId, equipaId: equipId })
            }).then(() => abrirModalMembros(equipId));
        }

        async function apagarEquipa(id) {
            if (!confirm("Apagar equipa?")) return;
            const res = await fetch(`/api/Equipa/Apagar/${id}`, { method: "DELETE" });
            if (res.ok) carregarEquipas();
        }

        window.addEventListener("click", e => {
            ["modalCriarEquipa", "modalConvite", "modalMembros"].forEach(id => {
                if (e.target === document.getElementById(id)) {
                    document.getElementById(id).style.display = "none";
                }
            });
        });
    </script>

}
